class Solution:
    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        cur_len = 0
        max_len = 1
        start = 0
        if n < 2:
            return s
        dp = [[False]*n for i in range(n)]
        for i in range(n):
            dp[i][i] = True
        for j in range(1,n):
            for i in range(j):
                if j-i <= 2:
                    if s[i] == s[j]:
                        dp[i][j] = True
                        cur_len = j-i+1
                elif s[i] == s[j] and dp[i+1][j-1]:
                    dp[i][j] = True
                    cur_len = j-i+1
                if dp[i][j]:
                    if cur_len > max_len:
                        start = i
                        max_len = cur_len
        return s[start:start+max_len]
